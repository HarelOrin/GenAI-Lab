inputs = {
    "skuid_app_generator": {
        "update_schema": {
            "original_prompt": "UFO sightings",
            "response": {
                "fields": [
                  {
                    "fieldName": "sighting_location",
                    "fieldType": "TEXT"
                  },
                  {
                    "fieldName": "sighting_date",
                    "fieldType": "DATE"
                  },
                  {
                    "fieldName": "sighting_time",
                    "fieldType": "DATETIME"
                  },
                  {
                    "fieldName": "description",
                    "fieldType": "TEXT"
                  },
                  {
                    "fieldName": "observer_name",
                    "fieldType": "TEXT"
                  },
                  {
                    "fieldName": "observer_contact",
                    "fieldType": "EMAIL"
                  },
                  {
                    "fieldName": "reported",
                    "fieldType": "PICKLIST",
                    "entries": ["yes", "no"]
                  }
                ],
                "properties": {
                  "appName": "UFO Sighting Tracker",
                  "pageName": "Sighting Report",
                  "databaseName": "UFO_Sightings_Database",
                  "objectName": "Sighting_Record",
                  "modelName": "Sighting_Detail",
                  "case": "UFO Sighting"
                }
              },
            "messages_array": [
                {
                  "role": "system",
                  "content": "You are a helper for building apps in the Skuid platform, the apps will only be in a template of incident management. A user will prompt a topic for the app and you will suggest relevant fields for the specific case to be presented in the app. Do not offer an Id field. The fields can be of type TEXT, NUMBER, PERCENT, DATE, DATETIME, EMAIL, PICKLIST or URL. For PICKLIST type add an array 'entries' to the field of options for the picklist. Aside from the fields please suggest relevant properties for the app: app name, page name, database name, object (of the database) name, and model name. Please make your response a single JSON like in the example response JSON provided without any other further text."
                },
                {
                  "role": "system",
                  "content": "Reference to the response example JSON: \n {'fields': [{'fieldName': 'description', 'fieldType': 'TEXT'}, {'fieldName': 'status', 'fieldType': 'PICKLIST', 'entries': ['active', 'resolved', 'failed', 'pending']}], 'properties': {'appName': 'relevant name for the app', 'pageName': 'relevant name for the page', 'databaseName': 'generated relevant database name...', 'objectName': 'generated relevant object name...', 'modelName': 'generated relevant model name...', 'case': 'generated relevant case name...'}}"
                },
                {
                  "role": "user",
                  "content": [
                    {
                      "type": "text",
                      "text": "UFO sighting"
                    }
                  ]
                }
              ]
        }
    },
    "process_capture": {
        "generate_process_text": {
    "ProcessActivities": [
        {
            "activity_name": "Open PowerToys Application",
            "activity_desc": "Opened the PowerToys application from the system tray.",
            "relevant": False,
            "relevant_actions": [
                "Open the system tray on the taskbar",
                "Open the PowerToys application from the system tray"
            ],
            "irrelevant_actions": []
        },
        {
            "activity_name": "Navigate to UKG Pro",
            "activity_desc": "Navigated to the 'Name, Address, and Telephone' section in UKG Pro.",
            "relevant": True,
            "relevant_actions": [
                "Navigate to the UKG Pro tab in Google Chrome",
                "Navigate to the 'Name, Address, and Telephone' section in UKG Pro",
                "Open the 'Name, Address, and Telephone' details in UKG Pro"
            ],
            "irrelevant_actions": []
        },
        {
            "activity_name": "Edit Address in UKG Pro",
            "activity_desc": "Edited the address field in UKG Pro.",
            "relevant": True,
            "relevant_actions": [
                "Select the address field for editing in UKG Pro",
                "Select the address field for editing in UKG Pro",
                "Type in the address field in UKG Pro",
                "Type in the address field in UKG Pro",
                "Type in the address field in UKG Pro",
                "Right-click in the address field in UKG Pro",
                "Select the misspelled word in the context menu",
                "Right-click in the address field in UKG Pro",
                "Select the misspelled word in the context menu",
                "Add a space in the address field in UKG Pro",
                "Type in the address field in UKG Pro"
            ],
            "irrelevant_actions": []
        },
        {
            "activity_name": "Save and Submit Address",
            "activity_desc": "Saved and submitted the updated address details in UKG Pro.",
            "relevant": True,
            "relevant_actions": [
                "Save the updated address details in UKG Pro",
                "Submit the updated address details in UKG Pro"
            ],
            "irrelevant_actions": [
                "Scroll through the summary page in UKG Pro",
                "Scroll through the summary page in UKG Pro"
            ]
        },
        {
            "activity_name": "Navigate to Codex Analyzer",
            "activity_desc": "Navigated to the Codex Analyzer page in Confluence.",
            "relevant": False,
            "relevant_actions": [
                "Navigate to the Codex Analyzer page in Confluence",
                "Select the Codex Analyzer page in Confluence"
            ],
            "irrelevant_actions": []
        },
        {
            "activity_name": "Sign In to Nintex",
            "activity_desc": "Signed in to Nintex.",
            "relevant": False,
            "relevant_actions": [
                "Submit the sign-in form on the Nintex login page",
                "Scroll through the Nintex login page"
            ],
            "irrelevant_actions": []
        }
    ],
    "PreviousRequestID": "26402c7e-fc89-4c79-a1b0-2570e356924b",
    "ProcessName": "test",
    "RoleName": "bob",
    "TagType": "relevance",
    "ActionsMetadata": "",
    "0Name": "Open PowerToys Application",
    "0Relevance": False,
    "1Name": "Navigate to UKG Pro",
    "1Relevance": True,
    "2Name": "Edit Address in UKG Pro",
    "2Relevance": True,
    "3Name": "Save and Submit Address",
    "3Relevance": True,
    "4Name": "Navigate to Codex Analyzer",
    "4Relevance": False,
    "5Name": "Sign In to Nintex",
    "5Relevance": False
}
    }
}